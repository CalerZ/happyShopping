<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jkq.jsqiang.mapper.MessageMapper">
  <resultMap id="BaseResultMap" type="com.jkq.jsqiang.entity.Message">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="foodName" jdbcType="VARCHAR" property="foodname" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
    <result column="userTime" jdbcType="TIMESTAMP" property="usertime" />
    <result column="businessTime" jdbcType="TIMESTAMP" property="businesstime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jkq.jsqiang.entity.MessageWithBLOBs">
    <result column="userContent" jdbcType="LONGVARCHAR" property="usercontent" />
    <result column="businessContent" jdbcType="LONGVARCHAR" property="businesscontent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, foodName, userName, userTime, businessTime
  </sql>
  <sql id="Blob_Column_List">
    userContent, businessContent
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jkq.jsqiang.entity.MessageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jkq.jsqiang.entity.MessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jkq.jsqiang.entity.MessageExample">
    delete from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jkq.jsqiang.entity.MessageWithBLOBs">
    insert into message (id, foodName, userName, 
      userTime, businessTime, userContent, 
      businessContent)
    values (#{id,jdbcType=INTEGER}, #{foodname,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{usertime,jdbcType=TIMESTAMP}, #{businesstime,jdbcType=TIMESTAMP}, #{usercontent,jdbcType=LONGVARCHAR}, 
      #{businesscontent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jkq.jsqiang.entity.MessageWithBLOBs">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="foodname != null">
        foodName,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="usertime != null">
        userTime,
      </if>
      <if test="businesstime != null">
        businessTime,
      </if>
      <if test="usercontent != null">
        userContent,
      </if>
      <if test="businesscontent != null">
        businessContent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="foodname != null">
        #{foodname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="usertime != null">
        #{usertime,jdbcType=TIMESTAMP},
      </if>
      <if test="businesstime != null">
        #{businesstime,jdbcType=TIMESTAMP},
      </if>
      <if test="usercontent != null">
        #{usercontent,jdbcType=LONGVARCHAR},
      </if>
      <if test="businesscontent != null">
        #{businesscontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jkq.jsqiang.entity.MessageExample" resultType="java.lang.Long">
    select count(*) from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update message
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.foodname != null">
        foodName = #{record.foodname,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        userName = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.usertime != null">
        userTime = #{record.usertime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.businesstime != null">
        businessTime = #{record.businesstime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.usercontent != null">
        userContent = #{record.usercontent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.businesscontent != null">
        businessContent = #{record.businesscontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update message
    set id = #{record.id,jdbcType=INTEGER},
      foodName = #{record.foodname,jdbcType=VARCHAR},
      userName = #{record.username,jdbcType=VARCHAR},
      userTime = #{record.usertime,jdbcType=TIMESTAMP},
      businessTime = #{record.businesstime,jdbcType=TIMESTAMP},
      userContent = #{record.usercontent,jdbcType=LONGVARCHAR},
      businessContent = #{record.businesscontent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update message
    set id = #{record.id,jdbcType=INTEGER},
      foodName = #{record.foodname,jdbcType=VARCHAR},
      userName = #{record.username,jdbcType=VARCHAR},
      userTime = #{record.usertime,jdbcType=TIMESTAMP},
      businessTime = #{record.businesstime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jkq.jsqiang.entity.MessageWithBLOBs">
    update message
    <set>
      <if test="foodname != null">
        foodName = #{foodname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="usertime != null">
        userTime = #{usertime,jdbcType=TIMESTAMP},
      </if>
      <if test="businesstime != null">
        businessTime = #{businesstime,jdbcType=TIMESTAMP},
      </if>
      <if test="usercontent != null">
        userContent = #{usercontent,jdbcType=LONGVARCHAR},
      </if>
      <if test="businesscontent != null">
        businessContent = #{businesscontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jkq.jsqiang.entity.MessageWithBLOBs">
    update message
    set foodName = #{foodname,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      userTime = #{usertime,jdbcType=TIMESTAMP},
      businessTime = #{businesstime,jdbcType=TIMESTAMP},
      userContent = #{usercontent,jdbcType=LONGVARCHAR},
      businessContent = #{businesscontent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jkq.jsqiang.entity.Message">
    update message
    set foodName = #{foodname,jdbcType=VARCHAR},
      userName = #{username,jdbcType=VARCHAR},
      userTime = #{usertime,jdbcType=TIMESTAMP},
      businessTime = #{businesstime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>