<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jkq.jsqiang.mapper.ShoppingMapper">
  <resultMap id="BaseResultMap" type="com.jkq.jsqiang.entity.Shopping">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="foodName" jdbcType="VARCHAR" property="foodname" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="total" jdbcType="INTEGER" property="total" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="foodsStatus" jdbcType="VARCHAR" property="foodsstatus" />
    <result column="transportStatus" jdbcType="VARCHAR" property="transportstatus" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jkq.jsqiang.entity.Shopping">
    <result column="address" jdbcType="LONGVARCHAR" property="address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, foodName, username, num, price, total, name, foodsStatus, transportStatus, time, 
    phone
  </sql>
  <sql id="Blob_Column_List">
    address
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.jkq.jsqiang.entity.ShoppingExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from shopping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.jkq.jsqiang.entity.ShoppingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from shopping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from shopping
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from shopping
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jkq.jsqiang.entity.ShoppingExample">
    delete from shopping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jkq.jsqiang.entity.Shopping">
    insert into shopping (id, foodName, username, 
      num, price, total, name, 
      foodsStatus, transportStatus, time, 
      phone, address)
    values (#{id,jdbcType=INTEGER}, #{foodname,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{price,jdbcType=DOUBLE}, #{total,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{foodsstatus,jdbcType=VARCHAR}, #{transportstatus,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, 
      #{phone,jdbcType=VARCHAR}, #{address,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jkq.jsqiang.entity.Shopping">
    insert into shopping
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="foodname != null">
        foodName,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="foodsstatus != null">
        foodsStatus,
      </if>
      <if test="transportstatus != null">
        transportStatus,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="foodname != null">
        #{foodname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="total != null">
        #{total,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="foodsstatus != null">
        #{foodsstatus,jdbcType=VARCHAR},
      </if>
      <if test="transportstatus != null">
        #{transportstatus,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jkq.jsqiang.entity.ShoppingExample" resultType="java.lang.Long">
    select count(*) from shopping
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update shopping
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.foodname != null">
        foodName = #{record.foodname,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.foodsstatus != null">
        foodsStatus = #{record.foodsstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.transportstatus != null">
        transportStatus = #{record.transportstatus,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update shopping
    set id = #{record.id,jdbcType=INTEGER},
      foodName = #{record.foodname,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      total = #{record.total,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      foodsStatus = #{record.foodsstatus,jdbcType=VARCHAR},
      transportStatus = #{record.transportstatus,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      phone = #{record.phone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update shopping
    set id = #{record.id,jdbcType=INTEGER},
      foodName = #{record.foodname,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      price = #{record.price,jdbcType=DOUBLE},
      total = #{record.total,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      foodsStatus = #{record.foodsstatus,jdbcType=VARCHAR},
      transportStatus = #{record.transportstatus,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      phone = #{record.phone,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jkq.jsqiang.entity.Shopping">
    update shopping
    <set>
      <if test="foodname != null">
        foodName = #{foodname,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="foodsstatus != null">
        foodsStatus = #{foodsstatus,jdbcType=VARCHAR},
      </if>
      <if test="transportstatus != null">
        transportStatus = #{transportstatus,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jkq.jsqiang.entity.Shopping">
    update shopping
    set foodName = #{foodname,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      total = #{total,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      foodsStatus = #{foodsstatus,jdbcType=VARCHAR},
      transportStatus = #{transportstatus,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jkq.jsqiang.entity.Shopping">
    update shopping
    set foodName = #{foodname,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      price = #{price,jdbcType=DOUBLE},
      total = #{total,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      foodsStatus = #{foodsstatus,jdbcType=VARCHAR},
      transportStatus = #{transportstatus,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>