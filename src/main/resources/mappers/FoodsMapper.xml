<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jkq.jsqiang.mapper.FoodsMapper">
  <resultMap id="BaseResultMap" type="com.jkq.jsqiang.entity.Foods">
    <id column="id" jdbcType="TINYINT" property="id" />
    <result column="foodName" jdbcType="VARCHAR" property="foodname" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="describe" jdbcType="CHAR" property="describe" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="picture" jdbcType="VARCHAR" property="picture" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="fenlei" jdbcType="VARCHAR" property="fenlei" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, foodName, name, price, describe, num, picture, state, fenlei
  </sql>
  <select id="selectByExample" parameterType="com.jkq.jsqiang.entity.FoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from foods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Byte" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from foods
    where id = #{id,jdbcType=TINYINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Byte">
    delete from foods
    where id = #{id,jdbcType=TINYINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jkq.jsqiang.entity.FoodsExample">
    delete from foods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jkq.jsqiang.entity.Foods">
    insert into foods (id, foodName, name, 
      price, describe, num, picture, 
      state, fenlei)
    values (#{id,jdbcType=TINYINT}, #{foodname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{describe,jdbcType=CHAR}, #{num,jdbcType=INTEGER}, #{picture,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{fenlei,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jkq.jsqiang.entity.Foods">
    insert into foods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="foodname != null">
        foodName,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="describe != null">
        describe,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="picture != null">
        picture,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="fenlei != null">
        fenlei,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=TINYINT},
      </if>
      <if test="foodname != null">
        #{foodname,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="describe != null">
        #{describe,jdbcType=CHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="picture != null">
        #{picture,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="fenlei != null">
        #{fenlei,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jkq.jsqiang.entity.FoodsExample" resultType="java.lang.Long">
    select count(*) from foods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update foods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=TINYINT},
      </if>
      <if test="record.foodname != null">
        foodName = #{record.foodname,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.describe != null">
        describe = #{record.describe,jdbcType=CHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.picture != null">
        picture = #{record.picture,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.fenlei != null">
        fenlei = #{record.fenlei,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update foods
    set id = #{record.id,jdbcType=TINYINT},
      foodName = #{record.foodname,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      describe = #{record.describe,jdbcType=CHAR},
      num = #{record.num,jdbcType=INTEGER},
      picture = #{record.picture,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      fenlei = #{record.fenlei,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jkq.jsqiang.entity.Foods">
    update foods
    <set>
      <if test="foodname != null">
        foodName = #{foodname,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="describe != null">
        describe = #{describe,jdbcType=CHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="picture != null">
        picture = #{picture,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="fenlei != null">
        fenlei = #{fenlei,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=TINYINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jkq.jsqiang.entity.Foods">
    update foods
    set foodName = #{foodname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      describe = #{describe,jdbcType=CHAR},
      num = #{num,jdbcType=INTEGER},
      picture = #{picture,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      fenlei = #{fenlei,jdbcType=VARCHAR}
    where id = #{id,jdbcType=TINYINT}
  </update>
</mapper>